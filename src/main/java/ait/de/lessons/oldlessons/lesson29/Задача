Упражнение 1: Базовая структура социальной сети
Описание задания
Создайте классы для моделирования базовой социальной сети. Для выполнения задания необходимо:

Создать базовый класс User с атрибутами:

id (уникальный идентификатор пользователя),
name (имя пользователя),
email (электронная почта).
В классе должны быть методы:

Конструктор для инициализации атрибутов,
Метод для вывода информации о пользователе.
Создать класс PremiumUser, который наследует класс User. В этом классе добавьте:

Атрибут subscriptionEndDate (дата окончания подписки),
Метод для проверки, активна ли подписка (возвращает true или false в зависимости от текущей даты).
Создать класс AdminUser, который также наследует класс User. Добавьте:

Метод banUser(User user), который запрещает доступ другому пользователю (запрещённый пользователь может быть сохранён в списке).
Важно: Используйте полиморфизм для обработки пользователей разных типов. Например, метод для отображения информации должен корректно работать для любого из классов User, PremiumUser и AdminUser.
Результат выполнения:
В результате работы должен быть создан код, который демонстрирует возможность взаимодействия между разными типами пользователей.

Упражнение 2: Социальные связи и посты
Описание задания
Разработайте систему для моделирования взаимодействия пользователей в социальной сети. Для выполнения задания необходимо:

Добавить возможность установления социальных связей между пользователями:

В класс User добавьте метод addFriend(User user) для добавления друга,
Метод removeFriend(User user) для удаления друга.
Список друзей должен быть реализован в виде коллекции (например, ArrayList).
Создать класс Post, который будет представлять запись пользователя. У поста должны быть следующие атрибуты:

author (объект класса User, автор записи),
content (текст записи),
likes (количество лайков).
Добавьте методы:
1
Конструктор для создания поста,
Метод like(), который увеличивает количество лайков на 1.
Добавить метод в класс User для создания постов (createPost(String content)), который возвращает объект класса Post.
Реализовать возможность отображения всех друзей и их постов. Добавьте метод viewFriendsPosts() в класс User, который выводит список всех постов, созданных друзьями.
Результат выполнения:
Код должен демонстрировать:

Создание пользователей,
Установление дружеских связей,
Создание постов пользователями,
Отображение постов друзей для выбранного пользователя.